version: '3.6'
services:
  postgres:
    image: postgres:13
    restart: always
    ports:
      - 5232:5432
    env_file: $BASE_PATH/services/postgres/.env.production
    volumes:
      - db_data:/var/lib/postgresql/data

  hasura:
    image: hasura/graphql-engine:v2.5.0
    restart: always
    ports:
      - 8080:8080
    depends_on:
      - "postgres"  
    build:
      context: $BASE_PATH/services/hasura  
    environment:
      - HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      - HASURA_GRAPHQL_DEV_MODE: "true"
      - HASURA_GRAPHQL_V1_BOOLEAN_NULL_COLLAPSE: "true"
      - HASURA_GRAPHQL_DATABASE_URL: "postgres://postgres:X9v0H92zlII81WHrvRO8dEXKC1i85djBrP0h8cDdTFE@postgres:5432/postgres"
      - HASURA_GRAPHQL_ENABLED_LOG_TYPES: "startup, http-log, webhook-log, websocket-log, query-log"
      - HASURA_GRAPHQL_ADMIN_SECRET: "NjcG3SpuPmuIqGom442F1bwk6Vi4qzLjpfYSQAkuZtv"
      - HASURA_GRAPHQL_UNAUTHORIZED_ROLE: "anonymous"
      - BACKEND_LAMBDA_BASE: "https://br1cl5uky0.execute-api.ap-south-1.amazonaws.com/production"

  caddy:
    image: $ECR_REGISTRY/birdeye-caddy:$IMAGE_TAG
    restart: unless-stopped
    ports:
      - '80:80'
      - '443:443'
      - '2019:2019'
    volumes:
      - caddy_data:/data
      - caddy_config:/config

volumes:
  db_data:
  caddy_config:
  caddy_data:
